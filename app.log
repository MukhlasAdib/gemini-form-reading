2025-05-11 14:07:43.887 | INFO     | __main__:read_form:52 - LLM response: ```json
{
  "Name": "Muhammad Ali",
  "Address": "Jln. H.Nafi, No. 26, Desa Mns. Mesjid",
  "NIK Number": "1173012807160002",
  "Date of Birth": "28/07/16"
}
```
2025-05-11 14:07:43.888 | ERROR    | __main__:read_form:58 - Failed to parse JSON: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):

  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\threading.py", line 1032, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000022E582E8680>
    └ <Thread(Thread-2 (process_request_thread), started daemon 16216)>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\threading.py", line 1075, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x0000022E582E8360>
    └ <Thread(Thread-2 (process_request_thread), started daemon 16216)>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\threading.py", line 1012, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 16216)>
    │    │        │    └ (<socket.socket fd=1008, family=2, type=1, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 36236)>, ('127.0.0.1', 362...
    │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 16216)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x0000022E5D5D3F80>>
    └ <Thread(Thread-2 (process_request_thread), started daemon 16216)>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\socketserver.py", line 697, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 36236)
    │    │              └ <socket.socket fd=1008, family=2, type=1, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 36236)>
    │    └ <function BaseServer.finish_request at 0x0000022E5D427560>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x0000022E5D5D3F80>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x0000022E5D5D3F80>
    │    │                   │        └ ('127.0.0.1', 36236)
    │    │                   └ <socket.socket fd=1008, family=2, type=1, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 36236)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x0000022E5D5D3F80>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\socketserver.py", line 766, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x0000022E5D515260>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x0000022E5D91F680>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\serving.py", line 398, in handle
    super().handle()
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\http\server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x0000022E5D445580>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x0000022E5D91F680>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\http\server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x0000022E5D91F680>>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x0000022E5D5B6B40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x0000022E5D5D3F80>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x0000022E5D91F680>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x0000022E5D927740>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x0000022E5D885F20>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\debug\__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x0000022E5D9276A0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=1008>, 'wsgi.errors': <_io.TextIOW...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x0000022E5D5B6B40>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x0000022E5D9276A0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=1008>, 'wsgi.errors': <_io.TextIOW...
           │    └ <function Flask.wsgi_app at 0x0000022E5D848B80>
           └ <Flask 'app'>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x0000022E5D8482C0>
               └ <Flask 'app'>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x0000022E5D848220>
         └ <Flask 'app'>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'read_image_form'
           │    │           │    │              └ <Rule '/read-image' (OPTIONS, POST) -> read_image_form>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x0000022E5D8DA7A0>, 'read_image_form': <function read_image_form at...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x0000022E5D8484A0>
           └ <Flask 'app'>

  File "C:\Users\user\Downloads\ocr-gemini\app.py", line 74, in read_image_form
    data = read_form(image)
           │         └ <PIL.PngImagePlugin.PngImageFile image mode=RGBA size=1308x2000 at 0x22E5D944260>
           └ <function read_form at 0x0000022E5D8DA840>

> File "C:\Users\user\Downloads\ocr-gemini\app.py", line 56, in read_form
    data_parsed = json.loads(answer)
                  │    │     └ 'this is not a json'
                  │    └ <function loads at 0x0000022E57FBCC20>
                  └ <module 'json' from 'C:\\Users\\user\\miniconda3\\envs\\ocr_gemini\\Lib\\json\\__init__.py'>

  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           │                │      └ 'this is not a json'
           │                └ <function JSONDecoder.decode at 0x0000022E57FBC720>
           └ <json.decoder.JSONDecoder object at 0x0000022E57F340B0>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\json\decoder.py", line 338, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               │    │          │      │  └ 'this is not a json'
               │    │          │      └ <built-in method match of re.Pattern object at 0x0000022E57F4F850>
               │    │          └ 'this is not a json'
               │    └ <function JSONDecoder.raw_decode at 0x0000022E57FBC7C0>
               └ <json.decoder.JSONDecoder object at 0x0000022E57F340B0>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\json\decoder.py", line 356, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
          │                                  └ 'this is not a json'
          └ <class 'json.decoder.JSONDecodeError'>

json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-05-11 14:09:39.273 | INFO     | __main__:read_form:52 - LLM response: ```json
{
  "Name": "Muhammad Ali",
  "Address": "Jln. H.Nafi, No. 26, Desa Mns. Mesjid",
  "NIK Number": "1173012807160002",
  "Date of Birth": "28/07/16"
}
```
2025-05-11 14:09:39.273 | ERROR    | __main__:read_image_form:76 - Failed to parse JSON: Failed to parse JSON response from LLM
Traceback (most recent call last):

  File "C:\Users\user\Downloads\ocr-gemini\app.py", line 56, in read_form
    data_parsed = json.loads(answer)
                  │    │     └ 'this is not a json'
                  │    └ <function loads at 0x00000222CE94CC20>
                  └ <module 'json' from 'C:\\Users\\user\\miniconda3\\envs\\ocr_gemini\\Lib\\json\\__init__.py'>

  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           │                │      └ 'this is not a json'
           │                └ <function JSONDecoder.decode at 0x00000222CE94C720>
           └ <json.decoder.JSONDecoder object at 0x00000222CE8C4290>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\json\decoder.py", line 338, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               │    │          │      │  └ 'this is not a json'
               │    │          │      └ <built-in method match of re.Pattern object at 0x00000222CE8DF850>
               │    │          └ 'this is not a json'
               │    └ <function JSONDecoder.raw_decode at 0x00000222CE94C7C0>
               └ <json.decoder.JSONDecoder object at 0x00000222CE8C4290>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\json\decoder.py", line 356, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
          │                                  └ 'this is not a json'
          └ <class 'json.decoder.JSONDecodeError'>

json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\threading.py", line 1032, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000222CEC78680>
    └ <Thread(Thread-2 (process_request_thread), started daemon 7736)>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\threading.py", line 1075, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x00000222CEC78360>
    └ <Thread(Thread-2 (process_request_thread), started daemon 7736)>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\threading.py", line 1012, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 7736)>
    │    │        │    └ (<socket.socket fd=432, family=2, type=1, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 36267)>, ('127.0.0.1', 36267))
    │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 7736)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x00000222D3D7D940>>
    └ <Thread(Thread-2 (process_request_thread), started daemon 7736)>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\socketserver.py", line 697, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 36267)
    │    │              └ <socket.socket fd=432, family=2, type=1, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 36267)>
    │    └ <function BaseServer.finish_request at 0x00000222D3DAB560>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x00000222D3D7D940>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x00000222D3D7D940>
    │    │                   │        └ ('127.0.0.1', 36267)
    │    │                   └ <socket.socket fd=432, family=2, type=1, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 36267)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x00000222D3D7D940>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\socketserver.py", line 766, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x00000222D3E95260>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x00000222D42A2FF0>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\serving.py", line 398, in handle
    super().handle()
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\http\server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x00000222D3DC9580>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x00000222D42A2FF0>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\http\server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x00000222D42A2FF0>>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x00000222D4222120>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x00000222D3D7D940>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x00000222D42A2FF0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x00000222D42A7740>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x00000222D4209F20>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\debug\__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x00000222D42A76A0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=432>, 'wsgi.errors': <_io.TextIOWr...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x00000222D4222120>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x00000222D42A76A0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=432>, 'wsgi.errors': <_io.TextIOWr...
           │    └ <function Flask.wsgi_app at 0x00000222D41CCB80>
           └ <Flask 'app'>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x00000222D41CC2C0>
               └ <Flask 'app'>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x00000222D41CC220>
         └ <Flask 'app'>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'read_image_form'
           │    │           │    │              └ <Rule '/read-image' (OPTIONS, POST) -> read_image_form>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x00000222D425A7A0>, 'read_image_form': <function read_image_form at...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x00000222D41CC4A0>
           └ <Flask 'app'>

> File "C:\Users\user\Downloads\ocr-gemini\app.py", line 74, in read_image_form
    data = read_form(image)
           │         └ <PIL.PngImagePlugin.PngImageFile image mode=RGBA size=1308x2000 at 0x222D42A3B60>
           └ <function read_form at 0x00000222D425A840>

  File "C:\Users\user\Downloads\ocr-gemini\app.py", line 58, in read_form
    raise FailedFormRead("Failed to parse JSON response from LLM") from e
          └ <class '__main__.FailedFormRead'>

FailedFormRead: Failed to parse JSON response from LLM
2025-05-11 14:10:55.528 | ERROR    | __main__:read_image_form:73 - Failed to open image: a bytes-like object is required, not 'str'
Traceback (most recent call last):

  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\threading.py", line 1032, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000025928AB8680>
    └ <Thread(Thread-2 (process_request_thread), started daemon 23632)>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\threading.py", line 1075, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x0000025928AB8360>
    └ <Thread(Thread-2 (process_request_thread), started daemon 23632)>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\threading.py", line 1012, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 23632)>
    │    │        │    └ (<socket.socket fd=1132, family=2, type=1, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 36294)>, ('127.0.0.1', 362...
    │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 23632)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x000002592DBB0740>>
    └ <Thread(Thread-2 (process_request_thread), started daemon 23632)>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\socketserver.py", line 697, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 36294)
    │    │              └ <socket.socket fd=1132, family=2, type=1, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 36294)>
    │    └ <function BaseServer.finish_request at 0x000002592DC1B560>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x000002592DBB0740>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x000002592DBB0740>
    │    │                   │        └ ('127.0.0.1', 36294)
    │    │                   └ <socket.socket fd=1132, family=2, type=1, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 36294)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x000002592DBB0740>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\socketserver.py", line 766, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x000002592DD05260>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x000002592E1134A0>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\serving.py", line 398, in handle
    super().handle()
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\http\server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x000002592DC35580>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x000002592E1134A0>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\http\server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x000002592E1134A0>>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x000002592DAA6B40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x000002592DBB0740>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x000002592E1134A0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x000002592E117740>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x000002592E072050>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\werkzeug\debug\__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x000002592E1176A0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=1132>, 'wsgi.errors': <_io.TextIOW...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x000002592DAA6B40>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x000002592E1176A0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=1132>, 'wsgi.errors': <_io.TextIOW...
           │    └ <function Flask.wsgi_app at 0x000002592E038B80>
           └ <Flask 'app'>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x000002592E0382C0>
               └ <Flask 'app'>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x000002592E038220>
         └ <Flask 'app'>
  File "C:\Users\user\miniconda3\envs\ocr_gemini\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'read_image_form'
           │    │           │    │              └ <Rule '/read-image' (OPTIONS, POST) -> read_image_form>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x000002592E0CA7A0>, 'read_image_form': <function read_image_form at...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x000002592E0384A0>
           └ <Flask 'app'>

> File "C:\Users\user\Downloads\ocr-gemini\app.py", line 71, in read_image_form
    image = Image.open(io.BytesIO("1678237924398"))
            │     │    │  └ <class '_io.BytesIO'>
            │     │    └ <module 'io' (frozen)>
            │     └ <function open at 0x000002592DAE9080>
            └ <module 'PIL.Image' from 'C:\\Users\\user\\miniconda3\\envs\\ocr_gemini\\Lib\\site-packages\\PIL\\Image.py'>

TypeError: a bytes-like object is required, not 'str'
2025-05-11 14:11:42.652 | INFO     | __main__:read_form:52 - LLM response: ```json
{
  "Name": "Muhammad Ali",
  "Address": "Jln. H.Nafi, No. 26, Desa Mns. Mesjid",
  "NIK Number": "1173012807160002",
  "Date of Birth": "28/07/16"
}
```
2025-05-11 14:11:42.654 | INFO     | __main__:read_form:58 - Parsed data: {'Name': 'Muhammad Ali', 'Address': 'Jln. H.Nafi, No. 26, Desa Mns. Mesjid', 'NIK Number': '1173012807160002', 'Date of Birth': '28/07/16'}
